{
    "swagger": "2.0",
    "info": {
        "description": "Dilshod's API Gateway",
        "title": "API Gateway",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/account/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Account details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accaunts.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created successfully",
                        "schema": {
                            "$ref": "#/definitions/accaunts.CreateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while creating account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/accaunts.UpdateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of an account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "schema": {
                            "$ref": "#/definitions/accaunts.GetAccountByidResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all accounts based on the provided query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"Savings\"",
                        "description": "Name of the account",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Checking\"",
                        "description": "Type of the account",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1000.5,
                        "description": "Balance of the account",
                        "name": "balance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"USD\"",
                        "description": "Currency of the account",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "$ref": "#/definitions/accaunts.ListAccountsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while fetching accounts",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "description": "Updated account details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accaunts.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "schema": {
                            "$ref": "#/definitions/accaunts.UpdateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create Budget",
                "parameters": [
                    {
                        "description": "Budget details",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/budgets.CreateBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget created successfully",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while creating budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a budget by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a budget by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get Budget by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget details",
                        "schema": {
                            "$ref": "#/definitions/budgets.GetBudgetByidResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all budgets based on the provided query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "List Budgets",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"user123\"",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"category456\"",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1500.75,
                        "description": "Amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"monthly\"",
                        "description": "Period",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2024-01-01\"",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2024-12-31\"",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of budgets",
                        "schema": {
                            "$ref": "#/definitions/budgets.ListBudgetsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while fetching budgets",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Update Budget",
                "parameters": [
                    {
                        "description": "Updated budget details",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/budgets.UpdateBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget updated successfully",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categories.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while creating category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/categories.GetByidCategoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all categories based on the provided query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List Categories",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"user123\"",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Groceries\"",
                        "description": "Name of the category",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Expense\"",
                        "description": "Type of the category",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/categories.ListCategoriesResponse"
                        }
                    },
                    "500": {
                        "description": "Error while fetching categories",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "description": "Updated category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categories.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Create Goal",
                "parameters": [
                    {
                        "description": "Goal details",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goals.CreateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal created successfully",
                        "schema": {
                            "$ref": "#/definitions/goals.GoalResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while creating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a goal by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Delete Goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/goals.GoalResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a goal by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Get Goal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal details",
                        "schema": {
                            "$ref": "#/definitions/goals.GetGoalResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all goals based on the provided query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "List Goals",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"user123\"",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Save for vacation\"",
                        "description": "Name of the goal",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 5000,
                        "description": "Target amount",
                        "name": "target_amount",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1500,
                        "description": "Current amount",
                        "name": "current_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2024-12-31\"",
                        "description": "Deadline (YYYY-MM-DD)",
                        "name": "deadline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"In Progress\"",
                        "description": "Status of the goal",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "$ref": "#/definitions/goals.ListGoalsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while fetching goals",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Update Goal",
                "parameters": [
                    {
                        "description": "Updated goal details",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goals.UpdateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal updated successfully",
                        "schema": {
                            "$ref": "#/definitions/goals.GoalResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a notification by user_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Delete Notification",
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/notifications.NotificationsResponse"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/get": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a notification by user_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification",
                "responses": {
                    "200": {
                        "description": "Notification retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/notifications.GetNotificationByidResponse"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while retrieving notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/getlist": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "List Notifications",
                "responses": {
                    "200": {
                        "description": "List of notifications retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/notifications.ListNotificationResponse"
                        }
                    },
                    "500": {
                        "description": "Error while retrieving notifications",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Transaction details",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactions.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/transactions.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while creating transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/transactions.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/transactions.GetTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all transactions based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Date",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "$ref": "#/definitions/transactions.ListTransactionsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while fetching transactions",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction",
                "parameters": [
                    {
                        "description": "Updated transaction details",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactions.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "$ref": "#/definitions/transactions.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accaunts.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "accaunts.CreateAccountResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "accaunts.GetAccountByidResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "accaunts.ListAccountsResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accaunts.GetAccountByidResponse"
                    }
                }
            }
        },
        "accaunts.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "accaunts.UpdateAccountResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "budgets.BudgetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "succes": {
                    "type": "boolean"
                }
            }
        },
        "budgets.CreateBudgetRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "budgets.GetBudgetByidResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "budgets.ListBudgetsResponse": {
            "type": "object",
            "properties": {
                "budgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/budgets.GetBudgetByidResponse"
                    }
                }
            }
        },
        "budgets.UpdateBudgetRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "categories.CategoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "categories.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "categories.GetByidCategoriesResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "categories.ListCategoriesResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/categories.GetByidCategoriesResponse"
                    }
                }
            }
        },
        "categories.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "goals.CreateGoalRequest": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "goals.GetGoalResponse": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "goals.GoalResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "goals.ListGoalsResponse": {
            "type": "object",
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/goals.GetGoalResponse"
                    }
                }
            }
        },
        "goals.UpdateGoalRequest": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                }
            }
        },
        "notifications.GetNotificationByidResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "notifications.ListNotificationResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notifications.GetNotificationByidResponse"
                    }
                }
            }
        },
        "notifications.NotificationsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "transactions.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "transactions.GetTransactionResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "transactions.ListTransactionsResponse": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactions.GetTransactionResponse"
                    }
                }
            }
        },
        "transactions.TransactionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "transactions.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}